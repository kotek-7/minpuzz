%%{init: {'theme':'default', 'themeVariables': {'primaryColor': '#4f46e5', 'primaryTextColor': '#fff', 'primaryBorderColor': '#3730a3', 'lineColor': '#374151', 'secondaryColor': '#e5e7eb', 'tertiaryColor': '#f3f4f6'}}}%%

sequenceDiagram
    participant U1 as ユーザー1
    participant F1 as フロントエンド1
    participant B as バックエンド
    participant R as Redis
    participant F2 as フロントエンド2
    participant U2 as ユーザー2

    Note over U1,U2: ゲーム接続フェーズ（match-found 後）

    par 両チームに並行通知
        B->>F1: Socket to teamA: match-found（matchId, self, partner）
        F1->>F1: ゲーム画面に遷移（接続待ち表示）
    and
        B->>F2: Socket to teamB: match-found（同一ペイロード）
        F2->>F2: ゲーム画面に遷移（接続待ち表示）
    end

    Note over F1,F2: 各プレイヤーがゲームルームに接続登録
    par 両チームが並行接続
        U1->>F1: ゲーム接続開始
        F1->>B: Socket emit: join-game（matchId, teamId, userId）
        B->>R: SADD match:{matchId}:team:{teamId}:connected userId
    and
        U2->>F2: ゲーム接続開始
        F2->>B: Socket emit: join-game（matchId, teamId, userId）
        B->>R: SADD match:{matchId}:team:{teamId}:connected userId
    end

    B->>R: 接続数を確認（teamA/B が期待人数に到達?）
    alt 全プレイヤーが接続完了
        R-->>B: 達成
        B->>R: match を READY に更新、チーム両方を IN_GAME に更新
        Note over B: ゲーム開始通知（チームルームに限定）
        B->>F1: Socket to teamA room: game-start（matchId）
        B->>F2: Socket to teamB room: game-start（matchId）
    else まだ接続待ち
        Note over U1,U2: 接続待ち表示を継続
    end

    Note over U1,U2: game-start 受信後、リアルタイムジグソーパズル開始

