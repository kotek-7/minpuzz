%%{init: {'theme':'default', 'themeVariables': {'primaryColor': '#4f46e5', 'primaryTextColor': '#fff', 'primaryBorderColor': '#3730a3', 'lineColor': '#374151', 'secondaryColor': '#e5e7eb', 'tertiaryColor': '#f3f4f6'}}}%%

sequenceDiagram
    participant U1 as ユーザー1 
    participant F1 as フロントエンド1 
    participant B as バックエンド 
    participant R as Redis 
    participant F2 as フロントエンド2 
    participant U2 as ユーザー2 

    Note over U1,U2: マッチングからゲーム開始までのフロー 

    Note over U1,F1: チーム1: 必要人数が揃った状態 
    U1->>F1: ゲームスタートボタンをクリック 
    F1->>B: POST /teams/{teamId}/startMatching 
    B->>R: チーム1の状態をマッチング中に更新 
    R-->>B: 更新完了 
    B-->>F1: マッチング開始成功 
    F1->>B: Socket emit: joinMatchingQueue
    B->>F1: Socket broadcast to team: navigateToMatching
    F1->>F1: マッチング画面に画面遷移 
    F1-->>U1: マッチング画面を表示 

    Note over B,R: マッチングロジック開始 
    B->>R: マッチング待機チーム一覧を確認 
    
    alt  対戦相手チームが既に待機中 
        R-->>B: チーム2の情報を返却 
        Note over B: マッチング成立処理へ 
    else  対戦相手チームが見つからない 
        Note over U1,F1: チーム1はマッチング待機 
        
        Note over U2,F2: チーム2も必要人数が揃う 
        U2->>F2: ゲームスタートボタンをクリック 
        F2->>B: POST /teams/{team2Id}/startMatching
        B->>R: チーム2の状態をマッチング中に更新 
        B-->>F2: マッチング開始成功
        F2->>B: Socket emit: joinMatchingQueue
        B->>F2: Socket broadcast to team: navigateToMatching
        F2->>F2: マッチング画面に画面遷移 
        F2-->>U2: マッチング画面を表示
        B->>R: マッチング待機チーム一覧を確認 
        R-->>B: チーム1が待機中であることを確認 
        Note over B: チーム1とチーム2のマッチング成立 
    end

    Note over B: 両チームマッチング成立 
    B->>R: 両チームをゲーム準備中状態に更新 
    R-->>B: ゲームルーム作成完了 

    par 両チームに並行通知 
        B->>F1: Socket emit: matchFound 
        F1->>F1: ゲーム画面に画面遷移 
        F1-->>U1: ゲーム画面を表示 
    and
        B->>F2: Socket emit: matchFound 
        F2->>F2: ゲーム画面に画面遷移 
        F2-->>U2: ゲーム画面を表示 
    end

    Note over F1,F2: ゲームルーム接続フェーズ 
    par 両チームが並行接続 
        F1->>B: Socket接続 
        B->>R: チーム1プレイヤー情報をゲームルームに登録 
    and
        F2->>B: Socket接続 
        B->>R: チーム2プレイヤー情報をゲームルームに登録 
    end

    B->>R: 接続済みプレイヤー数を確認 
    alt 全プレイヤーが接続完了 
        R-->>B: 全プレイヤー接続済み 
        B->>R: ゲーム状態を進行中に更新 
        R-->>B: ゲーム開始準備完了 
        
        Note over B: ゲーム開始処理 
        par 両チームに並行配信 
            B->>F1: Socket broadcast: gameStart 
            F1-->>U1: ゲーム開始 
        and
            B->>F2: Socket broadcast: gameStart 
            F2-->>U2: ゲーム開始 
        end
    else まだ接続待ちのプレイヤーがいる 
        Note over U1,U2: 接続待ち表示を継続 
    end

    Note over U1,U2: リアルタイムジグソーパズルゲーム開始 